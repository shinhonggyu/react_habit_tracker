{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","components/simpleHabit.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","inputRef","React","createRef","formRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleAdd","habits","map","key","id","onReset","Component","Navbar","totalCount","SimpleHabit","useState","setCount","spanRef","useRef","useCallback","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAoDeA,G,kNA1CbC,gBAAkB,WAChB,EAAKC,MAAMC,YAAY,EAAKD,MAAME,Q,EAGpCC,gBAAkB,WAChB,EAAKH,MAAMI,YAAY,EAAKJ,MAAME,Q,EAGpCG,aAAe,WACb,EAAKL,MAAMM,SAAS,EAAKN,MAAME,Q,kEAf/BK,QAAQC,IAAR,iBAAsBC,KAAKT,MAAME,MAAMQ,KAAvC,e,6CAIAH,QAAQC,IAAR,iBAAsBC,KAAKT,MAAME,MAAMQ,KAAvC,oB,+BAcQ,IAAD,EACiBD,KAAKT,MAAME,MAA3BQ,EADD,EACCA,KAAMC,EADP,EACOA,MAEd,OACE,wBAAIC,UAAU,SACZ,0BAAMA,UAAU,cAAcF,GAC9B,0BAAME,UAAU,eAAeD,GAC/B,4BACEC,UAAU,8BACVC,QAASJ,KAAKV,iBAEd,uBAAGa,UAAU,wBAEf,4BACEA,UAAU,8BACVC,QAASJ,KAAKN,iBAEd,uBAAGS,UAAU,yBAEf,4BACEA,UAAU,4BACVC,QAASJ,KAAKJ,cAEd,uBAAGO,UAAU,uB,GA3CHE,kBCyBLC,EAzBMC,gBAAK,SAAChB,GACzB,IAAMiB,EAAWC,IAAMC,YACjBC,EAAUF,IAAMC,YAUtB,OACE,0BAAME,IAAKD,EAASR,UAAU,WAAWU,SAT1B,SAACC,GAChBA,EAAMC,iBACN,IAAMd,EAAOO,EAASQ,QAAQC,MAC9BhB,GAAQV,EAAM2B,MAAMjB,GAEpBU,EAAQK,QAAQG,UAKd,2BACEP,IAAKJ,EACLY,KAAK,OACLjB,UAAU,YACVkB,YAAY,UAEd,4BAAQlB,UAAU,cAAlB,WCUSmB,E,4MA3BbC,UAAY,SAACtB,GACX,EAAKV,MAAM2B,MAAMjB,I,uDAGT,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CAAciB,MAAOlB,KAAKuB,YAC1B,4BACGvB,KAAKT,MAAMiC,OAAOC,KAAI,SAAChC,GAAD,OACrB,kBAAC,EAAD,CACEiC,IAAKjC,EAAMkC,GACXlC,MAAOA,EACPD,YAAa,EAAKD,MAAMC,YACxBG,YAAa,EAAKJ,MAAMI,YACxBE,SAAU,EAAKN,MAAMM,eAI3B,4BAAQM,UAAU,eAAeC,QAASJ,KAAKT,MAAMqC,SAArD,kB,GApBaC,aCUNC,E,uKAVX,OACE,yBAAK3B,UAAU,UACb,uBAAGA,UAAU,4BACb,+CACA,0BAAMA,UAAU,gBAAgBH,KAAKT,MAAMwC,iB,GAN9B1B,iB,GCGHwB,Y,aCsBHG,EAzBK,SAACzC,GAAW,IAAD,EACH0C,mBAAS,GADN,mBACtB/B,EADsB,KACfgC,EADe,KAEvBC,EAAUC,mBAEV9C,EAAkB+C,uBAAY,WAClCH,EAAShC,EAAQ,MAOnB,OAJAoC,qBAAU,WACRxC,QAAQC,IAAR,6BAAkCG,MACjC,IAGD,wBAAIC,UAAU,SACZ,0BAAMS,IAAKuB,EAAShC,UAAU,cAA9B,WAGA,0BAAMA,UAAU,eAAeD,GAC/B,4BAAQC,UAAU,8BAA8BC,QAASd,GACvD,uBAAGa,UAAU,0BCdrBoC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.81d6e456.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\n\r\nclass Habit extends PureComponent {\r\n  componentDidMount() {\r\n    console.log(`habit: ${this.props.habit.name} mounted`);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(`habit: ${this.props.habit.name} will unmount`);\r\n  }\r\n  handleIncrement = () => {\r\n    this.props.onIncrement(this.props.habit);\r\n  };\r\n\r\n  handleDecrement = () => {\r\n    this.props.onDecrement(this.props.habit);\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.props.onDelete(this.props.habit);\r\n  };\r\n\r\n  render() {\r\n    const { name, count } = this.props.habit;\r\n\r\n    return (\r\n      <li className=\"habit\">\r\n        <span className=\"habit-name\">{name}</span>\r\n        <span className=\"habit-count\">{count}</span>\r\n        <button\r\n          className=\"habit-button habit-increase\"\r\n          onClick={this.handleIncrement}\r\n        >\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <button\r\n          className=\"habit-button habit-decrease\"\r\n          onClick={this.handleDecrement}\r\n        >\r\n          <i className=\"fas fa-minus-square\"></i>\r\n        </button>\r\n        <button\r\n          className=\"habit-button habit-delete\"\r\n          onClick={this.handleDelete}\r\n        >\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Habit;\r\n","import React, { memo } from \"react\";\r\n\r\nconst HabitAddForm = memo((props) => {\r\n  const inputRef = React.createRef();\r\n  const formRef = React.createRef();\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const name = inputRef.current.value;\r\n    name && props.onAdd(name);\r\n    // this.inputRef.current.value = \"\";\r\n    formRef.current.reset();\r\n  };\r\n\r\n  return (\r\n    <form ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\r\n      <input\r\n        ref={inputRef}\r\n        type=\"text\"\r\n        className=\"add-input\"\r\n        placeholder=\"Habit\"\r\n      />\r\n      <button className=\"add-button\">Add</button>\r\n    </form>\r\n  );\r\n});\r\n\r\nexport default HabitAddForm;\r\n","import React, { Component } from \"react\";\r\nimport Habit from \"./habit\";\r\nimport HabitAddForm from \"./habitAddForm\";\r\n\r\nclass Habits extends Component {\r\n  handleAdd = (name) => {\r\n    this.props.onAdd(name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HabitAddForm onAdd={this.handleAdd} />\r\n        <ul>\r\n          {this.props.habits.map((habit) => (\r\n            <Habit\r\n              key={habit.id}\r\n              habit={habit}\r\n              onIncrement={this.props.onIncrement}\r\n              onDecrement={this.props.onDecrement}\r\n              onDelete={this.props.onDelete}\r\n            />\r\n          ))}\r\n        </ul>\r\n        <button className=\"habits-reset\" onClick={this.props.onReset}>\r\n          Reset All\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Habits;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass Navbar extends PureComponent {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <i className=\"navbar-logo fas fa-leaf\"></i>\r\n        <span>Habit Tracker</span>\r\n        <span className=\"navbar-count\">{this.props.totalCount}</span>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\nimport \"./app.css\";\nimport Habits from \"./components/habits\";\nimport Navbar from \"./components/navbar\";\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: \"Reading\", count: 0 },\n      { id: 2, name: \"Running\", count: 0 },\n      { id: 3, name: \"Coding\", count: 0 },\n    ],\n  };\n\n  handleIncrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDecrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        const count = habit.count - 1;\n        return { ...habit, count: count < 0 ? 0 : count };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDelete = (habit) => {\n    const habits = this.state.habits.filter((item) => item.id !== habit.id);\n    this.setState({ habits });\n  };\n\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, { id: Date.now(), name, count: 0 }];\n    this.setState({ habits });\n  };\n\n  handleReset = () => {\n    const habits = this.state.habits.map((habit) => {\n      if (habit.count !== 0) {\n        return { ...habit, count: 0 };\n      }\n      return habit;\n    });\n    this.setState({ habits });\n  };\n\n  render() {\n    return (\n      <>\n        <Navbar\n          totalCount={this.state.habits.filter((item) => item.count > 0).length}\n        />\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React, { useRef, useCallback, useEffect, useState } from \"react\";\r\n\r\nconst SimpleHabit = (props) => {\r\n  const [count, setCount] = useState(0);\r\n  const spanRef = useRef();\r\n\r\n  const handleIncrement = useCallback(() => {\r\n    setCount(count + 1);\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(`mounted & updated: ${count}`);\r\n  }, []);\r\n\r\n  return (\r\n    <li className=\"habit\">\r\n      <span ref={spanRef} className=\"habit-name\">\r\n        Reading\r\n      </span>\r\n      <span className=\"habit-count\">{count}</span>\r\n      <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SimpleHabit;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\nimport SimpleHabit from \"./components/simpleHabit\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleHabit />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}